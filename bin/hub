#!/usr/bin/env node

(function () {
	'use strict';

	module.exports = {};

	var
		fs = require('fs'),
		cluster = require('cluster'),
		workers = require('os').cpus().length,
		worker,
		app;

	module.exports.require = function (path) {
		var
			stats = fs.statSync(path),
			part;

		if (stats.isFile()) {
			require(process.cwd() + '/' + path)(module.exports);
		} else if (stats.isDirectory()) {
			fs.readdir(path, function (err, files) {
				files.forEach(function (file) {
					stats = fs.statSync(path + '/' + file);
					if (stats.isFile()) {
						if (file.indexOf('.js') !== -1) {
							part = require(process.cwd() + '/' + path + '/' + file.replace('.js', ''));
							if (typeof part === 'function') {
								part(module.exports);
							}
						}
					} else if (stats.isDirectory()) {
						part = require(process.cwd() + '/' +path + '/' + file);
						if (typeof part === 'function') {
							part(module.exports);
						}
					}
				});
			});
		}
	};

	module.exports.commander = require('commander');

	module.exports.commander.option('-w, --workers [number]', 'Number of workers');

	try {
		app = require(process.cwd() + '/index');
	} catch(e) {}

	if (app && typeof app.init === 'function') {
		app.init(module.exports);
	}

	module.exports.commander.parse(process.argv);


	if (module.exports.commander.workers) {
		module.exports.commander.workers = parseInt(module.exports.commander.workers, 10);
		if (isNaN(module.exports.commander.workers) || module.exports.commander.workers < 0) {
			console.log('Bad number of workers');
		} else {
			workers = module.exports.commander.workers;
		}
	}

	if (!app || typeof app.master !== 'function' || typeof app.worker !== 'function') {
		console.log('Application not found at ' + process.cwd());
		process.exit(1);
	}

	if (app && typeof app.common === 'function') {
		app.common(module.exports);
	}

	if (cluster.isMaster) {
		for (worker = 0; worker < workers; worker++) {
			cluster.fork();
		}
		app.master(module.exports);
	} else {
		app.worker(module.exports);
	}

}());